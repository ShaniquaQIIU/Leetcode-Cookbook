-- 编写一个 SQL 查询来实现分数排名。
-- 如果两个分数相同，则两个分数排名（Rank）相同。请注意，平分后的下一个名次应该是下一个连续的整数值。
-- 换句话说，名次之间不应该有“间隔”。

-- 使用窗口函数
select Score, dense_rank() over(order by Score desc) as `Rank`
from Scores;

--<窗口函数> over (partition by <用于分组的列名>
--                order by <用于排序的列名>)
-- rank函数：如果有并列名次的行，会占用下一名次的位置。比如正常排名是1，2，3，4，但是现在前3名是并列的名次，结果是：1，1，1，4。
-- dense_rank函数：如果有并列名次的行，不占用下一名次的位置。比如正常排名是1，2，3，4，但是现在前3名是并列的名次，结果是：1，1，1，2。
-- row_number函数：不考虑并列名次的情况。比如前3名是并列的名次，排名是正常的1，2，3，4。